AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-chatbot-app

  Sample SAM Template for sam-chatbot-app

Globals:
  Function:
    Timeout: 10
    Environment:
      Variables:
        ZAMMAD_GATEWAY_URL: "https://chatbot-test.orienteed.com"

Resources:
  # Lambda function to handle the chatbot
  BotLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda_bot/
      Handler: lambda_handler.lambda_handler
      Runtime: python3.8
      AutoPublishAlias: prod
      Policies:
        - AWSLambdaBasicExecutionRole
      Architectures:
        - x86_64

  # IAM Role used by the Lex service to make runtime calls
  LexServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lexv2.amazonaws.com
            Action:
              - "sts:AssumeRole"

  # Give permission to Lex bot to run the validation Lambda function
  lexBotPermission:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt BotLambdaFunction.Arn
      Principal: lex.amazonaws.com

  #Amazon Lex bot
  LexBot:
    Type: AWS::Lex::Bot
    Properties:
      AutoBuildBotLocales: true
      BotFileS3Location:
        S3Bucket: "bot-lex"
        S3ObjectKey: "Prod_B2BStore_Chatbot_LexJson.zip"
        S3ObjectVersion: "X.mbOZniMnDtcXtM9rss2yFHtey4R8Ci"
      DataPrivacy:
        ChildDirected: false
      Description: "B2BStore chatbot"
      IdleSessionTTLInSeconds: 60
      Name: "B2BStoreChatbot"
      RoleArn: !GetAtt LexServiceRole.Arn

  #Create a Bot Version
  LexBotVersion:
    DependsOn: LexBot
    Type: AWS::Lex::BotVersion
    Properties:
      BotId: !Ref LexBot
      BotVersionLocaleSpecification:
        - LocaleId: "en_US"
          BotVersionLocaleDetails:
            SourceBotVersion: DRAFT
        - LocaleId: "es_ES"
          BotVersionLocaleDetails:
            SourceBotVersion: DRAFT
        - LocaleId: "fr_FR"
          BotVersionLocaleDetails:
            SourceBotVersion: DRAFT
        - LocaleId: "pt_PT"
          BotVersionLocaleDetails:
            SourceBotVersion: DRAFT
      Description: "B2BStore chatbot version"

  
  #Create a Bot Alias for the Bot Version
  LexBotAlias:
    DependsOn: LexBotVersion
    Type: AWS::Lex::BotAlias
    Properties:
      BotId: !Ref LexBot
      BotAliasName: "ProdB2BStoreChatbot_v1"
      BotVersion: !GetAtt LexBotVersion.BotVersion
      Description: "B2BStore chatbot alias"
      BotAliasLocaleSettings:
          - BotAliasLocaleSetting:
              CodeHookSpecification:
                LambdaCodeHook:
                  CodeHookInterfaceVersion: "1.0"
                  LambdaArn: !Ref BotLambdaFunction.Alias
              Enabled: true
            LocaleId: "en_US"
          - BotAliasLocaleSetting:
              CodeHookSpecification:
                LambdaCodeHook:
                  CodeHookInterfaceVersion: "1.0"
                  LambdaArn: !Ref BotLambdaFunction.Alias
              Enabled: true
            LocaleId: "es_ES"
          - BotAliasLocaleSetting:
              CodeHookSpecification:
                LambdaCodeHook:
                  CodeHookInterfaceVersion: "1.0"
                  LambdaArn: !Ref BotLambdaFunction.Alias
              Enabled: true
            LocaleId: "fr_FR"
          - BotAliasLocaleSetting:
              CodeHookSpecification:
                LambdaCodeHook:
                  CodeHookInterfaceVersion: "1.0"
                  LambdaArn: !Ref BotLambdaFunction.Alias
              Enabled: true
            LocaleId: "pt_PT"


Outputs:
  BotLambdaFunction:
    Description: "LexBot Lambda Function ARN"
    Value: !GetAtt BotLambdaFunction.Arn
